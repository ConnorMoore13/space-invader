<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, user-scalable=no">
    <title>repl.it</title>
    <link href="index.css" rel="stylesheet" type="text/css"/>
  </head>
  <body>
    <canvas id="mycanvas">
    
    </canvas>
    <script src="index.js">
      
      
    </script>
  </body>
</html>




//javascript

canvas = document.getElementById('mycanvas');
canvas.width = window.innerWidth-20;
canvas.height = window.innerHeight-20;
// adds canvas element to the HTML
pen = canvas.getContext('2d');
var fps = 60;
test = setInterval(update, 1000 / fps);
setInterval(spawn,1000);
document.addEventListener("keydown",keyPush);
// keyboard listener



document.addEventListener("mousemove", mouseMoveHandler, false);
document.addEventListener("mousedown", mouseClickHandler, false);




spaceship = new Image();
spaceship.src = "http://pixelartmaker.com/art/6461f433d53dc9a.png";



// player
player_x = 100;
player_y = canvas.height - 80;
player_dim = 30;
player_speed = 15;

// enemy
enemy_list = [];
enemy_dim = 25;
enemy_speed = 5;
// shots
shots_list = [];
shot_dim = 4;
shot_speed = 7;

//lives and score+
lives = 3;
score = 0;

// dragging position
var dragStart;
drag = false;



// spawn the enemies and assign x and y positions.
function spawn() {
	enemy_list.push({ x:Math.random() * canvas.width - enemy_dim, y:0 });
}


// update each screen
function update() {
	pen.fillStyle = 'black';
	pen.fillRect(0, 0, canvas.width, canvas.height);

	pen.drawImage(spaceship,
  player_x - player_dim / 2,
  player_y - player_dim / 2,
  player_dim,
  player_dim);

  	/*
	pen.fillRect(
		player_x - player_dim / 2,
		player_y - player_dim / 2,
		player_dim,
		player_dim
	);
  	*/
	
	// drawing our shots list 
  	pen.fillStyle = 'lime';
	for (var s = 0; s < shots_list.length; s++) {
		shots_list[s].y -= shot_speed;

		pen.fillRect(
			shots_list[s].x - shot_dim / 2,
			shots_list[s].y - shot_dim / 2,
			shot_dim,
			shot_dim);
		for (var e = enemy_list.length - 1; e >= 0; e--) {
      // calculate the distance between the shots and enemies
			var diff_x = Math.abs(enemy_list[e].x - shots_list[s].x);
			var diff_y = Math.abs(enemy_list[e].y - shots_list[s].y);
			var dist = Math.sqrt(diff_x * diff_x + diff_y * diff_y);
      // detects if a shot hits the enemy
			if (dist < (shot_dim + enemy_dim) / 2) {
				enemy_list.splice(e, 1);
        		score+=10;
			}
		}
	}
  // drawing our enemy list
	pen.fillStyle = 'red';
	for (var e = 0; e < enemy_list.length; e++) {
		enemy_list[e].y += enemy_speed;
		pen.fillRect(
			enemy_list[e].x - enemy_dim / 2,
			enemy_list[e].y - enemy_dim / 2,
			enemy_dim,
			enemy_dim
		);

    // calculate the distance
		var diff_x = Math.abs(enemy_list[e].x - player_x);
		var diff_y = Math.abs(enemy_list[e].y - player_y);
		var dist = Math.sqrt(diff_x * diff_x + diff_y * diff_y);

    // detect if an enemy hits our hero.
		if (dist < (player_dim + enemy_dim) / 2) {
      // clear the stats and reset the player if he gets hit
			shots_list = [];
			enemy_list = [];
			//player_x = 100;
	        player_y = canvas.height - 80;
	        lives--;
			break;  
		}
	}
  pen.font = "Bold 20px Courier New"
  pen.fillText("Lives: "+lives,10,20)
  pen.fillText("Score: "+score,10,40)

  if (lives === 0){
    pen.fillStyle = "Black";
    pen.fillRect(0,0,canvas.width,canvas.height);
    pen.fillStyle = "red";
    pen.fillText("GAME OVER", 200, 200);
    pen.fillText("Score: "+ score, 200, 230);
    clearInterval(test);
  }

}
function keyPush(evt) {
	switch (evt.keyCode) {
		case 32: // space
			shots_list.push({ x: player_x, y: player_y });
			break;
		case 37: // left
			player_x -= player_speed;
			break;
		case 38:
			player_y -= player_speed;
			break;
		case 39:
			player_x += player_speed;
			break;
		case 40:
			player_y += player_speed;
			break;
	}
}

function mouseMoveHandler(e) {
  player_x = e.clientX
}

function mouseClickHandler(e) {
  // this checks for the left button
  if(e.button == 0){
    shots_list.push({ x: player_x, y: player_y });
  }
}
